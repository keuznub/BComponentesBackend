// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product{
  id Int @id @unique @default(autoincrement())
  name String
  description String?
  image String
  price Float
  discount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  idCategory Int?
  category Category? @relation(fields: [idCategory],references: [id])
  orders OrderProduct[]
  rates Rate[]
}

model User{
  id Int @id @unique @default(autoincrement())
  username String @unique
  password String
  email String @unique
  role String?
  orders Order[]
  rates Rate[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Order{
  id Int @id @unique @default(autoincrement())
  idUser Int 
  user User @relation(fields: [idUser],references: [id])
  status String
  orderProducts OrderProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id Int @id @unique @default(autoincrement())
  name String 
  color String?
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rate{
  idUser Int
  user User @relation(fields: [idUser], references: [id])
  idProduct Int
  product Product @relation(fields: [idProduct], references: [id])
  opinion String?
  value Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@id([idUser,idProduct])
}

model OrderProduct{
  idProduct Int 
  product Product @relation(fields: [idProduct], references: [id])
  idOrder Int
  order Order @relation(fields: [idOrder],references: [id])
  quantity Int
  @@id([idProduct,idOrder])

}

