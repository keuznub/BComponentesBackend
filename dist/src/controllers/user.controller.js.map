{"version":3,"sources":["../../../src/controllers/user.controller.ts"],"sourcesContent":["import { NextFunction, Request,Response } from \"express\"\r\nimport { ProductService } from \"../services/product.service\"\r\nimport { HttpException } from \"../exceptions/httpException\"\r\nimport { UserService } from \"../services/user.service\"\r\n\r\nexport class UserController{\r\n\r\n    static async getAll(req: Request, res:Response, next:NextFunction){\r\n        try{\r\n            const users = await UserService.getAll()\r\n            res.status(201).json(users)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async getByID(req: Request, res:Response, next:NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if(isNaN(id)) throw new HttpException(400,\"Bad request\")\r\n            const user = await UserService.getById(id)\r\n            res.status(201).json(user)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async delete(req: Request, res:Response, next:NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if(isNaN(id)) throw new HttpException(400,\"Bad request\")\r\n            const result = await UserService.delete(id)\r\n            res.status(201).json(result)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async update(req: Request, res:Response, next:NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if(isNaN(id)) throw new HttpException(400,\"Bad request\")\r\n            const user = req.body\r\n            user.id = id\r\n            const result = await UserService.update(user)\r\n            res.status(201).json(result)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n\r\n}"],"names":["UserController","getAll","req","res","next","users","UserService","status","json","error","getByID","id","Number","parseInt","params","isNaN","HttpException","user","getById","delete","result","update","body"],"mappings":";;;;+BAKaA;;;eAAAA;;;+BAHiB;6BACF;AAErB,IAAA,AAAMA,iBAAN,MAAMA;IAET,aAAaC,OAAOC,GAAY,EAAEC,GAAY,EAAEC,IAAiB,EAAC;QAC9D,IAAG;YACC,MAAMC,QAAQ,MAAMC,wBAAW,CAACL,MAAM;YACtCE,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACH;QACzB,EAAC,OAAMI,OAAM;YACTL,KAAKK;QACT;IACJ;IAEA,aAAaC,QAAQR,GAAY,EAAEC,GAAY,EAAEC,IAAiB,EAAC;QAC/D,IAAG;YACC,MAAMO,KAAKC,OAAOC,QAAQ,CAACX,IAAIY,MAAM,CAACH,EAAE;YACxC,IAAGI,MAAMJ,KAAK,MAAM,IAAIK,4BAAa,CAAC,KAAI;YAC1C,MAAMC,OAAO,MAAMX,wBAAW,CAACY,OAAO,CAACP;YACvCR,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACS;QACzB,EAAC,OAAMR,OAAM;YACTL,KAAKK;QACT;IACJ;IAEA,aAAaU,OAAOjB,GAAY,EAAEC,GAAY,EAAEC,IAAiB,EAAC;QAC9D,IAAG;YACC,MAAMO,KAAKC,OAAOC,QAAQ,CAACX,IAAIY,MAAM,CAACH,EAAE;YACxC,IAAGI,MAAMJ,KAAK,MAAM,IAAIK,4BAAa,CAAC,KAAI;YAC1C,MAAMI,SAAS,MAAMd,wBAAW,CAACa,MAAM,CAACR;YACxCR,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACY;QACzB,EAAC,OAAMX,OAAM;YACTL,KAAKK;QACT;IACJ;IAEA,aAAaY,OAAOnB,GAAY,EAAEC,GAAY,EAAEC,IAAiB,EAAC;QAC9D,IAAG;YACC,MAAMO,KAAKC,OAAOC,QAAQ,CAACX,IAAIY,MAAM,CAACH,EAAE;YACxC,IAAGI,MAAMJ,KAAK,MAAM,IAAIK,4BAAa,CAAC,KAAI;YAC1C,MAAMC,OAAOf,IAAIoB,IAAI;YACrBL,KAAKN,EAAE,GAAGA;YACV,MAAMS,SAAS,MAAMd,wBAAW,CAACe,MAAM,CAACJ;YACxCd,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACY;QACzB,EAAC,OAAMX,OAAM;YACTL,KAAKK;QACT;IACJ;AAGJ"}