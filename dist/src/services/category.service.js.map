{"version":3,"sources":["../../../src/services/category.service.ts"],"sourcesContent":["import { PrismaClient, Category  } from \"@prisma/client\"\r\nimport { HttpException } from \"../exceptions/httpException\"\r\nimport {prisma} from 'database/adapter'\r\n\r\nexport class CategoryService{\r\n    \r\n    static async getAll(){\r\n        const findCategory = await prisma.category.findMany()\r\n        if(!findCategory) throw new HttpException(404,\"Category not found\")\r\n        return findCategory\r\n    }\r\n\r\n    static async getById(id: number){\r\n        const findCategory = await prisma.category.findUnique({where:{id}})\r\n        if(!findCategory) throw new HttpException(404,\"Category not found\")\r\n        return findCategory\r\n    }\r\n\r\n\r\n    static async save(category: Category){\r\n        return await prisma.category.create({data:{...category}})\r\n    }\r\n\r\n    static async delete(id: number){\r\n        const findCategory = await prisma.category.findUnique({where:{id}})\r\n        if(!findCategory) throw new HttpException(404,\"Category not found\")\r\n        return await prisma.category.delete({where:{id}})\r\n    }\r\n\r\n    static async update(category: Category){\r\n        const {id} = category\r\n        const findCategory = await prisma.category.findUnique({where:{id}})\r\n        if(!findCategory) throw new HttpException(404,\"Category not found\")\r\n        return await prisma.category.update({where:{id},data:{...category}})\r\n    }\r\n\r\n\r\n\r\n\r\n}"],"names":["HttpException","prisma","CategoryService","getAll","findCategory","category","findMany","getById","id","findUnique","where","save","create","data","delete","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,aAAa,QAAQ,8BAA6B;AAC3D,SAAQC,MAAM,QAAO,mBAAkB;AAEvC,OAAO,IAAA,AAAMC,gCAAN;;aAAMA;gCAAAA;;kBAAAA;;YAEIC,KAAAA;mBAAb,SAAaA;uBAAb,oBAAA;wBACUC;;;;gCAAe;;oCAAMH,OAAOI,QAAQ,CAACC,QAAQ;;;gCAA7CF,eAAe;gCACrB,IAAG,CAACA,cAAc,MAAM,IAAIJ,cAAc,KAAI;gCAC9C;;oCAAOI;;;;gBACX;;;;YAEaG,KAAAA;mBAAb,SAAaA,QAAQC,EAAU;uBAA/B,oBAAA;wBACUJ;;;;gCAAe;;oCAAMH,OAAOI,QAAQ,CAACI,UAAU,CAAC;wCAACC,OAAM;4CAACF,IAAAA;wCAAE;oCAAC;;;gCAA3DJ,eAAe;gCACrB,IAAG,CAACA,cAAc,MAAM,IAAIJ,cAAc,KAAI;gCAC9C;;oCAAOI;;;;gBACX;;;;YAGaO,KAAAA;mBAAb,SAAaA,KAAKN,QAAkB;uBAApC,oBAAA;;;;gCACW;;oCAAMJ,OAAOI,QAAQ,CAACO,MAAM,CAAC;wCAACC,MAAK,mBAAIR;oCAAS;;;gCAAvD;;oCAAO;;;;gBACX;;;;YAEaS,KAAAA;mBAAb,SAAaA,QAAON,EAAU;uBAA9B,oBAAA;wBACUJ;;;;gCAAe;;oCAAMH,OAAOI,QAAQ,CAACI,UAAU,CAAC;wCAACC,OAAM;4CAACF,IAAAA;wCAAE;oCAAC;;;gCAA3DJ,eAAe;gCACrB,IAAG,CAACA,cAAc,MAAM,IAAIJ,cAAc,KAAI;gCACvC;;oCAAMC,OAAOI,QAAQ,CAACS,MAAM,CAAC;wCAACJ,OAAM;4CAACF,IAAAA;wCAAE;oCAAC;;;gCAA/C;;oCAAO;;;;gBACX;;;;YAEaO,KAAAA;mBAAb,SAAaA,OAAOV,QAAkB;uBAAtC,oBAAA;wBACWG,IACDJ;;;;gCADCI,KAAMH,SAANG;gCACc;;oCAAMP,OAAOI,QAAQ,CAACI,UAAU,CAAC;wCAACC,OAAM;4CAACF,IAAAA;wCAAE;oCAAC;;;gCAA3DJ,eAAe;gCACrB,IAAG,CAACA,cAAc,MAAM,IAAIJ,cAAc,KAAI;gCACvC;;oCAAMC,OAAOI,QAAQ,CAACU,MAAM,CAAC;wCAACL,OAAM;4CAACF,IAAAA;wCAAE;wCAAEK,MAAK,mBAAIR;oCAAS;;;gCAAlE;;oCAAO;;;;gBACX;;;;WA9BSH;IAmCZ"}